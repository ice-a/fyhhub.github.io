(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{467:function(e,t,r){"use strict";r.r(t);var v=r(5),_=Object(v.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"说一下响应式数据的理解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#说一下响应式数据的理解"}},[e._v("#")]),e._v(" 说一下响应式数据的理解")]),e._v(" "),r("h2",{attrs:{id:"核心答案"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#核心答案"}},[e._v("#")]),e._v(" 核心答案")]),e._v(" "),r("h3",{attrs:{id:"_1-object-defineproperty"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-object-defineproperty"}},[e._v("#")]),e._v(" 1. Object.defineProperty")]),e._v(" "),r("p",[e._v("对象通过"),r("code",[e._v("defineReactive")]),e._v("方法，使用"),r("code",[e._v("Object.defineProperty")]),e._v("，将属性进行劫持。\n整体流程是这样的：")]),e._v(" "),r("ol",[r("li",[e._v("创建渲染Watcher，初始时执行渲染函数")]),e._v(" "),r("li",[e._v("执行过程中，触发了getter，开始收集依赖")]),e._v(" "),r("li",[e._v("修改data，触发setter, 通知渲染Watcher更新视图")])]),e._v(" "),r("h3",{attrs:{id:"_2-观察者模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-观察者模式"}},[e._v("#")]),e._v(" 2. 观察者模式")]),e._v(" "),r("p",[e._v("响应式系统使用了观察者模式，观察者模式主要有两个角色，一是"),r("code",[e._v("主题")]),e._v(", 二是"),r("code",[e._v("观察者")]),e._v("。主题会收集、删除、通知观察者，\n而观察者会订阅主题。响应式系统中，"),r("code",[e._v("Observer和Dep")]),e._v("就扮演了"),r("code",[e._v("主题")]),e._v("的角色，"),r("code",[e._v("Watcher")]),e._v("是观察者")]),e._v(" "),r("p",[e._v("每个对象都有一个"),r("code",[e._v("Observer")]),e._v("对象，每个属性都有一个"),r("code",[e._v("Dep")]),e._v("对象，"),r("code",[e._v("Dep")]),e._v("对象中收集着"),r("code",[e._v("Watcher")])]),e._v(" "),r("h2",{attrs:{id:"补充答案"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#补充答案"}},[e._v("#")]),e._v(" 补充答案：")]),e._v(" "),r("p",[e._v("暂无")]),e._v(" "),r("h2",{attrs:{id:"扩展回答"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#扩展回答"}},[e._v("#")]),e._v(" 扩展回答")]),e._v(" "),r("p",[e._v("在 Vue 2 的实现中，在组件初始化阶段把数据变成响应式时，遇到子属性仍然是对象的情况，会递归执行 Object.defineProperty 定义子对象的响应式；而在 Vue 3 的实现中，只有在对象属性被访问的时候才会判断子属性的类型来决定要不要递归执行 reactive，在性能上会有一定的提升。")])])}),[],!1,null,null,null);t.default=_.exports}}]);